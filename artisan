#!/usr/bin/env php
<?php
define('LARAVEL_START', microtime(true));

/*
|--------------------------------------------------------------------------
| Register The Laravel-MPS Helpers
|--------------------------------------------------------------------------
|
| Laravel-MPS helpers provide support for additional features. They are
| the significant part of the whole system and must be included before any logic.
|
*/
require __DIR__ . '/bootstrap/helpers.php';

/*
|--------------------------------------------------------------------------
| Register The Auto Loader
|--------------------------------------------------------------------------
|
| Composer provides a convenient, automatically generated class loader
| for our application. We just need to utilize it! We'll require it
| into the script here so that we do not have to worry about the
| loading of any our classes "manually". Feels great to relax.
|
*/

require __DIR__ . '/vendor/autoload.php';

/*
|--------------------------------------------------------------------------
| Initialize the units root directory
|--------------------------------------------------------------------------
|
| The unit root directory has to be a subfolder
| of the application base directory.
|
*/
if (defined('UNIT_PATH')) {
	require __DIR__ . '/bootstrap/mps/init.php';
}

/*
|--------------------------------------------------------------------------
| Turn On The Lights
|--------------------------------------------------------------------------
|
| We need to illuminate PHP development, so let us turn on the lights.
| This bootstraps the framework and gets it ready for use, then it
| will load up this application so that we can run it and send
| the responses back to the browser and delight our users.
|
*/

$app = require_once __DIR__ . '/bootstrap/app.php';

/*
|--------------------------------------------------------------------------
| Run The Artisan Application
|--------------------------------------------------------------------------
|
| When we run the console application, the current CLI command will be
| executed in this console and the response sent back to a terminal
| or another output device for the developers. Here goes nothing!
|
*/

$kernel = $app->make(Illuminate\Contracts\Console\Kernel::class);

$status = $kernel->handle(
	$input = new Symfony\Component\Console\Input\ArgvInput,
	new Symfony\Component\Console\Output\ConsoleOutput
);

/*
|--------------------------------------------------------------------------
| Shutdown The Application
|--------------------------------------------------------------------------
|
| Once Artisan has finished running, we will fire off the shutdown events
| so that any final work may be done by the application before we shut
| down the process. This is the last thing to happen to the request.
|
*/

$kernel->terminate($input, $status);

exit($status);
